potatofs (2.12.0) unstable; urgency=medium

  * Let the purge command function with a running potatomgr
  * backend_s3's idle timeout should be greater than hint_slab_max_age_seconds
    or else we can't track hints long enough.
  * Keep track of hints using a count of "hits" instead of a timestamp. If a
    preloaded slab doesn't get a hit within a defined time, decrease "hits" and
    stop preloading it when it's at zero. Hits can not go beyond 3. Also split
    off the backend_s3 code a bit for slab queues and the hits tracker.

 -- Pascal Lalonde <plalonde@overnet.ca>  Sun, 02 Apr 2023 23:34:12 -0400

potatofs (2.11.2) unstable; urgency=medium

  * Let backend_s3 know when a "get" is the result of a preload; the backend
    shouldn't start tracking the sequence of slabs when a get is a preload
  * Empty the preload queue in backend_s3 when the claim command exits with
    a code other than 2 or 0

 -- Pascal Lalonde <plalonde@overnet.ca>  Tue, 28 Mar 2023 23:34:05 -0400

potatofs (2.11.1) unstable; urgency=medium

  * Set a limit on how many in-memory slabs we can have
  * Add logs for timing of AddHint, to see if we're spending too much
    time adding hints; this can be limited by reducing hint_slabs_max_open
  * Set the minimum token bucket refill interval to 1 second, fixing an
    infinite loop issue
  * Process hints in a goroutine, thus unblocking get operations in the meantime
  * Fixed potatoctl dir command for v2 dirs

 -- Pascal Lalonde <plalonde@overnet.ca>  Tue, 28 Mar 2023 22:16:55 -0400

potatofs (2.11.0) unstable; urgency=medium

  * Fix MaxPreloadPerHint, which was ignored when deleting extra hints
  * Add a new counter for backend preloads; useful when computing slab
    cache hit ratio
  * Fix some error formats
  * Don't report ECONNRESET errors at fs shutdown
  * Add a "purge" command to attempt to free all local slabs, unless dirty.
    Add some prototypes to potatomgr.c.
  * Change how backend_s3 does preloading; keep track of loaded slabs and
    add hints for each of them; a new config value comes with this:
    hint_slab_max_age_seconds

 -- Pascal Lalonde <plalonde@overnet.ca>  Sun, 26 Mar 2023 20:53:29 -0400

potatofs (2.10.1) unstable; urgency=medium

  * Fix issue with offset in show_slab() for inode tables
  * Build with -O2

 -- Pascal Lalonde <plalonde@overnet.ca>  Mon, 20 Mar 2023 00:38:47 -0400

potatofs (2.10.0) unstable; urgency=medium

  v2.10.0
  * Everytime we unclaim(), clear our ownership from the slab. Eventually that
    will ensure we leave slabs claimable by other fs instances, even if the
    slab is still local. This means we need a new slabdb flag to indicate
    that the slab is available locally, even if not currently owned, to make
    purges efficient.
  * Looping on slabs now supports filtering by slabdb flags, which is useful
    to make looping for LRU or over delayed truncations faster
  * Make sure the fs waits for mgr shutdown before shutting down itself,
    though this currently doesn't matter much since FUSE doesn't support
    blocking on unmount (see https://github.com/libfuse/libfuse/issues/1)
  * Make the max preload factor configurable, defaulting to 5
  * Add max_preload_per_hint example
  * Don't attempt to retry to connect to the mgr on a "claim" command.
    This is so we don't block needlessly when the fs already has a claim.
    This is useful for backends who would like to use "potatoctl claim"
    to preload slabs.
  * Add example for log_file_path
  * Use O_CLOEXEC on open() instead of calling fcntl() after
  * Fix issue where we don't save the SLABDB_FLAG_LOCAL in unclaim
  * Given latest changes, we shouldn't skip unclaimed slabs in purge()

 -- Pascal Lalonde <plalonde@overnet.ca>  Sun, 19 Mar 2023 23:52:05 -0400

potatofs (2.9.0) unstable; urgency=medium

  v2.9.0
  * add an optional log file in addition to syslog, configured with the
    log_file_path config directive
  * No need to go through the logic of xlog functions if the log priority
    isn't high enough, so just return more quickly.
  * Print a nicer error when backend_s3 is already running; this is not an
    abnormal condition
  * Fix format in backend_s3

 -- Pascal Lalonde <plalonde@overnet.ca>  Thu, 16 Mar 2023 20:40:04 -0400

potatofs (2.8.3) unstable; urgency=medium

  v2.8.3
  * backend_s3 now cleans up the socket if there's no server listening on it
  * Have backend_s3 ignore SIGTERM so it doesn't get terminated during system
    shutdown
  * Don't print an error in DoClaim in backend_s3 if the exit code from the
    claim command is 2. This way we can avoid giving false errors in
    preloading.
  * Add a bit more logging at fs shutdown
  * Add missing error in mgr.c when we get connect failures

 -- Pascal Lalonde <plalonde@overnet.ca>  Wed, 15 Mar 2023 23:25:13 -0400

potatofs (2.8.2) unstable; urgency=medium

  v2.8.2
  * Apply the hint preload skew at preload time, not in the DB
  * In potatomgr, don't print errors at LOG_ERR when a slab requested with
    OSLAB_NONBLOCK hits XLOG_APP/XLOG_BUSY; just log at LOG_INFO instead
    with a custom error
  * Make the backend_s3 hints preload queue size configurable
  * Replace NewConfig by loadConfig; it was always a global var anyway
  * Prettify hint log messages in backend_s3
  * inode_inspect can now set OSLAB_NONBLOCK so that some potatoctl commands
    can return early with an error message

 -- Pascal Lalonde <plalonde@overnet.ca>  Tue, 14 Mar 2023 01:04:26 -0400

potatofs (2.8.1) unstable; urgency=medium

  v2.8.1
  * Fix mgr PID and version string output in ctop
  * Don't count claim contentions if the slab open flags have OSLAB_NONBLOCK
    set, because then it means this isn't affecting the filesystem itself.

 -- Pascal Lalonde <plalonde@overnet.ca>  Sat, 11 Mar 2023 21:48:22 -0500

potatofs (2.8.0) unstable; urgency=medium

  v2.8.0
  * Add dependency for golang-github-mattn-go-sqlite3-dev
  * Add hints and preload functionality to backend_s3
  * Add a NOHINT flag when opening slabs to avoid triggering a hint on the
    backend. This is to prevent looping indefinitely by triggering another
    hint when preloading a slab.
  * Add new counters for backend puts/gets/hints; this lets us compute a
    rough local cache hit ratio which we display in ctop.
  * Fix claim contention counter in ctop (was displaying the wrong counter)

 -- Pascal Lalonde <plalonde@overnet.ca>  Sat, 11 Mar 2023 20:53:06 -0500

potatofs (2.7.3) unstable; urgency=medium

  v2.7.3

  * Copyright 2023
  * Various clang-analyzer fixes, new lock contention counters
  * Use _exit() in child processes

  Fixes following Coverity scan:
  * Ignore coverity files
  * Missing break in switch that would cause the -f option to also set noatime
  * Missing args after format string
  * Use clock_gettime_x() anywhere it makes sense
  * Add missing dep on ncurses
  * Missing build dep on golang
  * Set the GOCACHE to something valid during build with pbuilder
  * ... and more.

 -- Pascal Lalonde <plalonde@overnet.ca>  Sun, 05 Mar 2023 16:40:17 -0500

potatofs (2.7.1) unstable; urgency=medium

  * Add missing fuse3 dependency
  * Fix warnings (and potential bugs) for fs_status and do_shutdown with O2
  * Add more sample params to example conf
  * Create the data dir at startup if it doesn exist
  * Unclaim slabs from LRU more aggressively when we're nearing our
    max_open limit

 -- Pascal Lalonde <plalonde@overnet.ca>  Sat, 03 Dec 2022 21:28:25 -0500

potatofs (2.7.0) unstable; urgency=medium

  * v2.7.0
  * Add ctop to potatoctl, an ncurses "top" tool
  * Add configurable log level to backend_s3
  * Add config example about shutdown grace period, and comment why it can
    be important

 -- Pascal Lalonde <plalonde@overnet.ca>  Thu, 01 Dec 2022 23:06:22 -0500

potatofs (2.6.2) unstable; urgency=medium

  v2.6.2
  * Fix used block calculation used during purge
  * Log inode/base along with duration when performing backend_get()

 -- Pascal Lalonde <plalonde@overnet.ca>  Mon, 28 Nov 2022 23:42:03 -0500

potatofs (2.6.1) unstable; urgency=medium

  v2.6.1
  Fix a few bugs, some major:
  * Truncate slabs in copy_outgoing_slab() and copy_incoming_slab(),
    otherwise we can end up with trailing bytes from a previous iteration.
    This causes those slabs to have the wrong CRC, preventing them from being
    used. Corruption, essentially.
  * Fix cast in slabdb for flags; just use uint32_t. Sqlite doesn't store
    short ints like uint8_t.
  * Fix possible bad file descriptor in failure situations in claim()
  * Have fs_sync() handle retryable errors
  * Convert XLOG_EOF to XLOG_BUSY in slab_load() to make that retryable by
    fs ops.
  * Have our test backend cleanup partial files when out of space
  * Display slab CRC in potatoctl
  * Add some logging
  * Update bench.sh to have smaller defaults to run on smaller systems

 -- Pascal Lalonde <plalonde@overnet.ca>  Mon, 28 Nov 2022 22:50:08 -0500

potatofs (2.6.0) unstable; urgency=medium

  * Fix libuuid1 dep
  * Add -encrypt and -decrypt to backend_s3, allowing to encrypt/decrypt slabs
    locally for troubleshooting

 -- Pascal Lalonde <plalonde@overnet.ca>  Sun, 27 Nov 2022 14:13:14 -0500

potatofs (2.5.0) unstable; urgency=medium

  * v2.5.0

 -- Pascal Lalonde <plalonde@overnet.ca>  Sun, 27 Nov 2022 12:54:31 -0500

potatofs (2.4.2) unstable; urgency=medium

  * Initial Release.

 -- Pascal Lalonde <plalonde@overnet.ca>  Wed, 23 Nov 2022 19:44:56 -0500
